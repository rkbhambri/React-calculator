{"version":3,"sources":["components/CalculatorBody/CalculatorBody.js","components/Display/Display.js","components/Button/Button.js","components/CalculatorButtons/CaculatorButtons.js","components/Header/Header.js","containers/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["CalculatorBody","state","storedNumber","handleClick","event","Object","_Users_admin_Documents_ReactJs_Practice_ReactProjects_React_calculator_react_calculator_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","_this","checkNumber","target","value","length","test","concat","isInputCorrect","i","result","eval","join","setState","_Users_admin_Documents_ReactJs_Practice_ReactProjects_React_calculator_react_calculator_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_this2","this","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","_Display_Display__WEBPACK_IMPORTED_MODULE_8__","_CalculatorButtons_CaculatorButtons__WEBPACK_IMPORTED_MODULE_9__","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Display","props","Button","react_default","assign","label","CalculatorButtons","components_Button_Button","onClick","Header","text","Calculator","components_Header_Header","App","containers_Calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39f561cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Display from '../Display/Display';\nimport CalculatorButtons from '../CalculatorButtons/CaculatorButtons';\nimport './CalculatorBody.css';\n\nclass CalculatorBody extends Component {\n\n\tstate = {\n\t\tstoredNumber: [0]\n\t};\n\t// check\n\thandleClick = (event) => {\n\t\tlet storedNumber = [...this.state.storedNumber];\n\t\t// regex to check whether selected value is number or not\n\t\tlet checkNumber = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\n\t\tif (event.target.value !== '=') {\n\t\t\t// Replace with new number when = is pressed and current value is number\n\t\t\tif (typeof (storedNumber[0]) === 'number' && storedNumber.length === 1 && checkNumber.test(event.target.value)) {\n\t\t\t\tstoredNumber[0] = event.target.value;\n\t\t\t}\n\t\t\telse if (typeof (storedNumber[0]) === 'number' && storedNumber.length > 1 && checkNumber.test(event.target.value)) {\n\t\t\t\tstoredNumber = this.state.storedNumber.concat(event.target.value);\n\n\t\t\t}\n\t\t\telse if (typeof (storedNumber[0]) === 'number' && !checkNumber.test(event.target.value)) {\n\t\t\t\tstoredNumber = this.state.storedNumber.concat(event.target.value);\n\t\t\t}\n\t\t\telse if (typeof (storedNumber[0]) !== 'number') {\n\t\t\t\tstoredNumber = this.state.storedNumber.concat(event.target.value);\n\t\t\t}\n\t\t}\n\t\tif (event.target.value === '=' && storedNumber.length > 0) {\n\t\t\tlet isInputCorrect = true;\n\t\t\tfor (let i = 0; i < storedNumber.length; i++) {\n\t\t\t\tif (!checkNumber.test(storedNumber[i])) {\n\t\t\t\t\tif (!checkNumber.test(storedNumber[i + 1])) {\n\t\t\t\t\t\tisInputCorrect = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isInputCorrect) {\n\t\t\t\tconst result = eval(this.state.storedNumber.join(\"\"));\n\t\t\t\tstoredNumber = [result];\n\t\t\t}\n\t\t}\n\t\tif (event.target.value === 'clear') {\n\t\t\tstoredNumber = [];\n\t\t}\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tstoredNumber\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"calculator-body col-md-4 offset-4\">\n\t\t\t\t<Display storedNumber={this.state.storedNumber} />\n\t\t\t\t<CalculatorButtons handleClick={(event) => this.handleClick(event)} />\n\t\t\t</div>\n\t\t);\n\t};\n};\nexport default CalculatorBody;","import React from 'react';\nimport './Display.css';\n\nconst Display = (props) => {\n    return (\n        <div className=\"display text-right border pt-3 pr-2\">{props.storedNumber.join(\"\")}</div>\n    );\n};\nexport default Display;","import React from 'react';\nimport './Button.css';\n\nconst Button = (props) => {\n    return (\n        <button className=\"button\" {...props}>{props.label}</button>\n    );\n};\nexport default Button;","import React from 'react';\nimport Button from '../Button/Button';\n\nconst CalculatorButtons = (props) => {\n    return (\n        <div className=\"buttons-wrapper\">\n            <Button onClick={(event) => props.handleClick(event)} label=\"(\" value=\"(\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\")\" value=\")\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"%\" value=\"%\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"AC\" value=\"clear\" />\n\n            <Button onClick={(event) => props.handleClick(event)} label=\"7\" value=\"7\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"8\" value=\"8\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"9\" value=\"9\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"/\" value=\"/\" />\n\n            <Button onClick={(event) => props.handleClick(event)} label=\"4\" value=\"4\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"5\" value=\"5\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"6\" value=\"6\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"X\" value=\"*\" />\n\n            <Button onClick={(event) => props.handleClick(event)} label=\"1\" value=\"1\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"2\" value=\"2\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"3\" value=\"3\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"-\" value=\"-\" />\n\n\n            <Button onClick={(event) => props.handleClick(event)} label=\"0\" value=\"0\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\".\" value=\".\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"=\" value=\"=\" />\n            <Button onClick={(event) => props.handleClick(event)} label=\"+\" value=\"+\" />\n\n\n        </div>\n    );\n};\n\nexport default CalculatorButtons;","import React from 'react';\nimport './Header.css';\n\nconst Header = (props) => {\n    return (\n        <div className=\"header text-center\">\n            <h1>{props.text}</h1>\n        </div>\n    );\n};\n\nexport default Header;","import React, { Component } from 'react';\nimport Header from '../components/Header/Header';\nimport CalculatorBody from '../components/CalculatorBody/CalculatorBody';\n\nclass Calculator extends Component {\n    render() {\n        return (\n            <div className=\"calculator-wrapper\">\n                <Header text=\"Calculator\" />\n                <CalculatorBody />\n            </div>\n        );\n    };\n};\nexport default Calculator;","import React, { Component } from 'react';\nimport Calculator from './containers/Calculator';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Calculator />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}